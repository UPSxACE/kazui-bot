// bot.on("chat_member", (ctx) => {
//   const oldStatus = ctx.chatMember.old_chat_member.status;
//   const newStatus = ctx.chatMember.new_chat_member.status;
//   const username = ctx.chatMember.old_chat_member.user.username;
//   if (inGroup(oldStatus) && !inGroup(newStatus)) {
//     console.log(`User ${username} left.`);
//   }
//   if (!inGroup(oldStatus) && inGroup(newStatus)) {
//     console.log(`User ${username} joined.`);
//   }
// });

// bot.command("test_short", (ctx) => {
//   try {
//     ctx.reply(translator.fromUUID(ctx.args[0])); // mhvXdrZT4jP5T8vBxuvm75
//   } catch {}
// });
// bot.command("test_unshort", (ctx) => {
//   try {
//     ctx.reply(translator.toUUID(ctx.args[0])); // mhvXdrZT4jP5T8vBxuvm75
//   } catch {}
// });

bot.command("test_invite", async (ctx) => {
    console.log("TEST INVITE! ARGS: ", ctx.args);
    const [_link, _id, _username] = ctx.args;
    const { success, data } = z
      .tuple([z.string(), z.number(), z.string()])
      .safeParse([_link, Number(_id), _username]);
  
    if (!success) return;
  
    // valid args
    const [link, id, username] = data;
  
    const callerid = ctx.message.from.id;
    const caller = await ctx.getChatMember(callerid).catch(() => null);
    if (caller?.status === "administrator" || caller?.status === "creator") {
      // Is admin
      const result = await database.join(link, id, username);
      ctx.reply(result ? "New member!" : "Not new.");
    }
  });